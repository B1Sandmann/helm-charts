{{- if .Values.thanos.enabled }}
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: thanos-compactor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: thanos-compactor
  serviceName: thanos-compactor
  template:
    metadata:
      labels:
        app: thanos-compactor
    spec:
      containers:
      - args:
        - compact
        - --log.level={{ .Values.logLevel }}
        - --data-dir=/var/thanos/store
        - --objstore.config=$(OBJSTORE_CONFIG)
        - --wait
        env:
        - name: OBJSTORE_CONFIG
          valueFrom:
            secretKeyRef:
              key: {{ required ".Values.thanos.spec.objectStorageConfig.key missing" .Values.thanos.spec.objectStorageConfig.key }}
              name: {{ required ".Values.thanos.spec.objectStorageConfig.name" .Values.thanos.spec.objectStorageConfig.name }}
        image: {{ include "thanos.image" . }}
        name: thanos-compactor
        ports:
        - containerPort: 10902
          name: http
        volumeMounts:
        - mountPath: /var/thanos/store
          name: data
          readOnly: false
      volumes:
      - emptyDir: {}
        name: data
  volumeClaimTemplates: []
{{ end }}
