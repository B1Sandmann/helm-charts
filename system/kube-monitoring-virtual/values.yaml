global:
  clusterType: virtual

  # Prometheus via operator.
  prometheus_operated:
    # The Prometheus collector is only used in the baremetal controlplane to aggregate cpu metrics and
    # might be unnecessary in other environments.
    # If the collector is disabled a `frontend` Prometheus is deployed.
    collector:
      enabled: false

kube-state-metrics:
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/port_1: "8081"
    prometheus.io/targets: "kubernetes"

  # This avoid double scraping of metrics caused by setting the `prometheus.io/scrape: "true"` annotation on the service.
  # We already have the annotations on the kube-state-metrics pod.
  prometheusScrape: false

  resources:
    requests:
      memory: 150Mi
      cpu: 100m

ntp-exporter:
  image:
    repository: hub.eu-de-1.cloud.sap/monsoon/ntp-exporter
    tag: v1.0-7-gf28483e
  ntp:
    server: timehost1.cc.cloud.sap

ping-exporter:
  targets: []

prometheus-node-exporter:
  image:
    repository: prom/node-exporter

  extraArgs:
    - --collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)
    - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|bpf|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tmpfs|tracefs)$$
    - --collector.processes
    - --path.rootfs=/rootfs
    - --collector.systemd.enable-task-metrics
    - --collector.systemd.enable-restarts-metrics
    - --collector.systemd.enable-start-time-metrics

  extraHostVolumeMounts:
    - name: dbus
      hostPath: /var/run/dbus/system_bus_socket
      mountPath: /var/run/dbus/system_bus_socket
      readOnly: true
    - name: rootfs
      hostPath: /
      mountPath: /rootfs
      readOnly: true
      mountPropagation: HostToContainer

  resources:
    requests:
      memory: 100Mi
      cpu: 100m

prometheus-server:
  name: kubernetes

  retentionTime: 7d

  additionalScrapeConfigs:
    name: k8s-collector-additional-scrape-config
    key: scrape-config.yaml

  ingress:
    enabled: true
    host: prometheus-kubernetes

  # Store in memory.
  persistence:
    enabled: true
    size: 100Gi

  serviceDiscoveries:
    endpoints:
      enabled: false

  # Send alerts to these alertmanagers.
  alertmanagers:
    - alertmanager.eu-de-1.cloud.sap
    - alertmanager.internet.eu-de-2.cloud.sap