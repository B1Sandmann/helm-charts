global:
  region: regionOne
  domain: evil.corp
  clusterType: controlplane

# Metric whitelist.
allowedMetrics:
  cAdvisor:
    - container_cpu_cfs_periods_total
    - container_cpu_cfs_throttled_seconds_total
    - container_cpu_cfs_throttled_periods_total
    - container_cpu_usage_seconds_total
    - container_fs_inodes_total
    - container_fs_limit_bytes
    - container_fs_usage_bytes
    - container_last_seen
    - container_memory_usage_bytes
    - container_memory_working_set_bytes
    - container_network_receive_bytes_total
    - container_network_transmit_bytes_total

  kubelet:
    - kubelet_pod_start_latency_microseconds
    - kubelet_running_pod_count
    - process_max_fds
    - process_open_fds

  kubeAPIServer:
    - apiserver_request_count
    - apiserver_request_latencies_bucket
    - etcd_object_counts
    - process_max_fds
    - process_open_fds

# Values for operated Prometheus collector.
# Only used if global.prometheus_operated.enabled: true.
prometheus-collector-operated:
  name: collector-kubernetes

  retentionTime: 1h

  additionalScrapeConfigs:
    name: k8s-collector-additional-scrape-config
    key: scrape-config.yaml

  ingress:
    enabled: true
    host: prometheus-collector-kubernetes

  # Store in memory.
  persistence:
    enabled: false

  serviceAccount:
    create: false
    name: default

  # Discover targets with `prometheus.io/targets=kubernetes` annotation as well.
  serviceDiscoveries:
    additionalTargets:
      - kubernetes

# Values for operated Prometheus frontend.
# Only used if global.prometheus_operated.enabled: true.
prometheus-frontend-operated:
  name: kubernetes

  retentionTime: 7d

  additionalScrapeConfigs:
    name: k8s-frontend-additional-scrape-config
    key: scrape-config.yaml

  ingress:
    enabled: true
    host: prometheus-kubernetes

  # Store in memory.
  persistence:
    enabled: true
    size: 300Gi

  serviceAccount:
    create: false
    name: default

  serviceDiscoveries:
    endpoints:
      enabled: false

  # Disable alerting until the transition to the operated Prometheus was done in all regions.
  # alertmanagers:
  #  - alertmanager.eu-de-1.cloud.sap
  #  - alertmanager.eu-nl-1.cloud.sap

# Deploy basic set of Prometheus alert and aggregation rules for monitoring Kubernetes.
prometheus-kubernetes-rules:
  prometheusName: kubernetes
  prometheusCollectorName: collector-kubernetes
