apiVersion: extensions/v1beta1
kind: Deployment

metadata:
  name: prometheus-frontend
  labels:
    app: prometheus
    type: frontend

spec:
  revisionHistoryLimit: 5
  replicas: 1
  minReadySeconds: 10
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: prometheus
        type: frontend
    spec:
      terminationGracePeriodSeconds: 600
      securityContext:
        fsGroup: 0
        runAsUser: 0
      containers:
        - name: prometheus 
          image: "{{.Values.global.prometheus.image}}:{{.Values.global.prometheus.tag}}"
          args:
            - --config.file=/etc/prometheus/prometheus.yaml
            - --storage.tsdb.path=/prometheus
            - --storage.tsdb.retention={{.Values.retention}}
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
            - --web.external-url=https://prometheus.{{.Values.global.region}}.{{.Values.global.domain}}
            - --web.enable-admin-api
            - --log.level={{ default "info" .Values.log_level }}
          ports:
            - name: http 
              containerPort: 9090
          volumeMounts:
            - name: data
              mountPath: /prometheus
            - name: config
              mountPath: /etc/prometheus
        - name: prometheus-configmap-reloader
          image: "{{ .Values.global.configmap_reload.image.repository }}:{{ .Values.global.configmap_reload.image.tag }}"
          args:
            - --volume-dir=/etc/prometheus
            - --webhook-url=http://localhost:9090/-/reload
          volumeMounts:
            - name: config
              mountPath: /etc/prometheus
              readOnly: true
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.name | quote }}
        - name: config
          configMap:
            name: prometheus-frontend
