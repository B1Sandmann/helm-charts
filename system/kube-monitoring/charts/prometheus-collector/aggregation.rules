groups:
- name: cpu
  rules:
  # TODO: remove with K8S 1.10+ / cAdvisor 0.29.0 (https://github.com/google/cadvisor/blob/master/CHANGELOG.md#0290-2018-02-20)
  - record: aggregated:container_cpu_system_seconds_total
    expr: sum(container_cpu_system_seconds_total{container_name!="POD"}) by (id,namespace,pod_name,container_name)

  - record: aggregated:container_cpu_usage_seconds_total
    expr: sum(container_cpu_usage_seconds_total{container_name!="POD"}) by (id,namespace,pod_name,container_name)

  - record: aggregated:container_cpu_user_seconds_total
    expr: sum(container_cpu_user_seconds_total{container_name!="POD"}) by (id,namespace,pod_name,container_name)

- name: swift
  rules:
  - record: aggregated:swift_cluster_storage_used_percent_gauge_average
    expr: (avg(swift_cluster_storage_used_percent_gauge) by (kubernetes_namespace, system, component) OR avg(swift_cluster_storage_used_percent) by (kubernetes_namespace, system, component))

  - record: aggregated:swift_async_pendings_rate
    expr: (sum(increase(swift_object_server_async_pendings_counter[5m])) by (kubernetes_namespace) OR sum(increase(swift_object_server_async_pendings[5m])) by (kubernetes_namespace))

- name: prometheus
  rules:
  - record: aggregated:prometheus_local_storage_ingested_samples_total_rate
    expr: rate(prometheus_local_storage_ingested_samples_total[5m])

- name: postgres
  rules:
  - record: aggregated:pg_database_size_bytes_gauge_average
    expr: avg(pg_database_size_bytes) by (kubernetes_name,datname)

- name: limes
  rules:
  - record: limes_container_memory_usage_percent
    expr: '100 * max by (namespace,pod_name) (container_memory_working_set_bytes{pod_name=~"limes-.+",container_name!="POD"}) / max by (pod_name, namespace) (label_replace(kube_pod_container_resource_limits_memory_bytes{pod=~"limes-.+"}, "pod_name", "$1", "pod", "(.*)"))'

- name: castellum
  rules:
  # aggregate success/failure counters for use in alert expressions
  - record: castellum_aggregated_asset_resizes
    expr: sum by (asset) (castellum_asset_resizes)
  - record: castellum_aggregated_errored_asset_resizes
    expr: sum by (asset) (castellum_errored_asset_resizes)
  - record: castellum_aggregated_failed_asset_scrapes
    expr: sum by (asset) (castellum_failed_asset_scrapes)
  - record: castellum_aggregated_failed_resource_scrapes
    expr: sum by (asset) (castellum_failed_resource_scrapes)
  - record: castellum_aggregated_successful_asset_scrapes
    expr: sum by (asset) (castellum_successful_asset_scrapes)
  - record: castellum_aggregated_successful_resource_scrapes
    expr: sum by (asset) (castellum_successful_resource_scrapes)

  # aggregate counters from observer and workers into one aggregate counter;
  # otherwise prometheus-maia will not ingest the metrics properly because
  # they only differ in labels that are dropped by its relabel config
  - record: castellum_aggregated_operation_state_transitions
    expr: sum(castellum_operation_state_transitions) by (asset,project_id,from_state,to_state)

- name: elasticsearch
  rules:
  - record: elasticsearch_data_diskspace_used_percentage
    expr: (100 - 100 * elasticsearch_filesystem_data_free_bytes / elasticsearch_filesystem_data_size_bytes)

- name: kubernetes_resources
  rules:
  - record: aggregated:container_memory_saturation_ratio
    expr: sum(container_memory_working_set_bytes) by (namespace, pod_name, container_name) / sum(label_join(label_join(kube_pod_container_resource_limits_memory_bytes, "container_name", "", "container"), "pod_name", "", "pod")) by (namespace, pod_name, container_name)
  - record: aggregated:container_memory_utilization_ratio
    expr: sum(container_memory_working_set_bytes) by (namespace, pod_name, container_name) / sum(label_join(label_join(kube_pod_container_resource_requests_memory_bytes, "container_name", "", "container"), "pod_name", "", "pod")) by (namespace, pod_name, container_name)
  - record: aggregated:container_cpu_saturation_ratio
    expr: sum(irate(container_cpu_cfs_throttled_seconds_total[5m])) by (namespace, pod_name, container_name) / (sum(irate(aggregated:container_cpu_usage_seconds_total[5m])) by (namespace, pod_name, container_name) + sum(irate(container_cpu_cfs_throttled_seconds_total[5m])) by (namespace, pod_name, container_name))
  - record: aggregated:container_cpu_utilization_ratio
    expr: ( sum(irate(container_cpu_cfs_throttled_seconds_total[5m])) by (namespace, pod_name, container_name) + sum(irate(aggregated:container_cpu_usage_seconds_total[5m])) by (namespace, pod_name, container_name) ) / sum(label_join(label_join(kube_pod_container_resource_requests_cpu_cores, "container_name", "", "container"), "pod_name", "", "pod")) by (namespace, pod_name, container_name)

- name: arista_switches
  rules:
  - record: aggregated:snmp_arista_vlans_counted
    expr: count by(instance) (snmp_arista_dot1qVlanFdbId)
