{{- if .Values.nebula.enabled -}}
{{- if .Values.nebula.statefulSet.enabled -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nebula-statefulset
  annotations:
  {{ toYaml .Values.nebula.statefulSet.annotations | indent 4 }}
  labels:
    {{- if .Values.nebula.statefulSet.labels}}
    {{ toYaml .Values.nebula.statefulSet.labels | nindent 4 }}
    {{- end}}
spec:
  podManagementPolicy: {{ .Values.nebula.statefulSet.podManagementPolicy }}
  replicas: {{ .Values.nebula.replicas }}
  serviceName: nebula-service
  updateStrategy:
    type: {{ .Values.nebula.statefulSet.updateStrategy }}
  selector:
    matchLabels:
      app.kubernetes.io/name: nebula
      app.kubernetes.io/instance: nebula
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nebula
        app.kubernetes.io/instance: nebula
    spec:
      serviceAccountName: nebula
      securityContext:
        {}
      containers:
        - name: nebula
          securityContext:
            {}
          image: "{{ .Values.nebula.image.name }}:{{ .Values.nebula.image.tag }}"
          imagePullPolicy: IfNotPresent
          args:
            - "-config=/nebula/config.yaml"
          volumeMounts:
            - name: nebula-config
              mountPath: "/nebula/config.yaml"
              subPath: config.yaml
          ports:
            - name: http
              containerPort: {{ .Values.nebula.http }}
              protocol: TCP
          resources:
            {}
      volumes:
        - name: nebula-config
          secret:
            secretName: nebula-config
{{- end -}}
{{- end -}}
