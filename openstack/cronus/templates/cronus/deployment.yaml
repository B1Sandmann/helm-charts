{{- if .Values.cronus.enabled -}}
{{- if not .Values.cronus.statefulSet.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cronus-deployment
spec:
  replicas: 1
  updateStrategy:
    type: {{ .Values.cronus.updateStrategy }}
  selector:
    matchLabels:
      app.kubernetes.io/name: cronus
      app.kubernetes.io/instance: cronus
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cronus
        app.kubernetes.io/instance: cronus
    spec:
      serviceAccountName: cronus
      securityContext:
        {}
      containers:
        - name: cronus
          securityContext:
            {}
          image: "{{ .Values.cronus.image.name }}:{{ .Values.cronus.image.tag }}"
          imagePullPolicy: IfNotPresent
          args:
            - "-config=/cronus/config.yaml"
          volumeMounts:
            - name: cronus-config
              mountPath: "/cronus/config.yaml"
              subPath: config.yaml
          ports:
            - name: http
              containerPort: {{ .Values.cronus.port.http }}
              protocol: TCP
            - name: smtp
              containerPort: {{ .Values.cronus.port.smtp }}
              protocol: TCP
          resources:
            {}
      volumes:
        - name: cronus-config
          secret:
            secretName: cronus-config
{{- end -}}
{{- end -}}
