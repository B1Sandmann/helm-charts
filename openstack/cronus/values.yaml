replicaCount: 1
cronus:
  enabled: true
  cacheSize: 256
  port:
    http: 5000
    smtp: 1025
  debug: true
  host: cronus-host
  tls: tls-secret
  image:
    name: cronus-repository
    pullPolicy: IfNotPresent
    tag: latest
    imagePullSecrets: []
  statefulSet:
    enabled: true
    podManagementPolicy: OrderedReady
    annotations: {}
    labels: {}
    headless:
      annotations: {}
      labels: {}
      servicePort: 80
    updateStrategy: RollingUpdate
  replicas: 1
nebula:
  enabled: true
  cacheSize: 512
  http: 1080
  debug: true
  host: nebula-host
  image:
    name: nebula-repository
    pullPolicy: IfNotPresent
    tag: latest
    imagePullSecrets: []
  statefulSet:
    enabled: true
    podManagementPolicy: OrderedReady
    annotations: {}
    labels: {}
    headless:
      annotations: {}
      labels: {}
      servicePort: 80
    updateStrategy: RollingUpdate
  replicas: 1


config:
  region: eu-de-2
  authUrl: https://identity
  group: service-group
  jiraUsername: jira-username
  jiraPassword: jira-password
  serviceUsername: service-username
  servicePassword: service-password
  applicationCredentialID: application-credential-id
  applicationCredentialSecret: application-credential-secret
  awsAccess: aws-access
  awsSecret: aws-secret
  technicalUsername: aws-username
  awsPolicy: aws-policy
  endpointType: public
  forwardUserAgent: false
  billingCacheTTL: 24h
  technicalResponsible: technical-responsible@example
  accountStatusTimeout: 5m
  accountStatusPollDelay: 10s
  verifyEmailDomain: example.com
  verifyEmailSecret: domainkey
  allowedServices:
    email: email-region

service:
  type: ClusterIP
