kind: Deployment
apiVersion: extensions/v1beta1

metadata:
  name: arc-janitor
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"

spec:
  revisionHistoryLimit: 3
  replicas: 1 
  template:
    metadata:
      labels:
        app: arc-janitor
    spec:
      containers:
        - name: api
          image: {{ .Values.api.image.repository }}:{{ .Values.api.image.tag }}
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          args: [janitor]
          ports:
            - name: janitor 
              containerPort: 3000 
          readinessProbe:
            httpGet:
              path: /
              port: 3000 
            initialDelaySeconds: 5
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /
              port: 3000 
            initialDelaySeconds: 20
            timeoutSeconds: 5
          env:
            - name: ARC_ENV
              value: production
{{- if .Values.pg_cluster.enabled }}
            - name: DBUSER
              valueFrom: { secretKeyRef:    { name: arc-postgresql-cluster.arc.credentials, key: username } }
            - name: DBHOST
              value: arc-postgresql-cluster
            - name: DBPASSWORD
              valueFrom: { secretKeyRef:    { name: arc-postgresql-cluster.arc.credentials, key: password } }
            - name: SSLMODE
              value: require
{{- else }}
            - name: DBUSER
              value: postgres
            - name: DBHOST
              value: {{ template "postgresql.fullname" . }}
            - name: DBPASSWORD
              valueFrom: { secretKeyRef:    { name: {{ template "postgresql.fullname" . }}, key: postgres-password } }
{{ end }}


