{{- if .Values.agent.multus | default false }}
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: neutron-network-agent
  labels:
    system: openstack
    application: neutron
    component: agent
spec:
  updateStrategy:
{{- if or (eq .Values.global.region "qa-de-1") (eq .Values.global.region "staging") }}
    type: RollingUpdate
{{- else }}
    type: OnDelete
{{- end }}
  selector:
    matchLabels:
      component: agent
  template:
    metadata:
      annotations:
        k8s.v1.cni.cncf.io/networks: bond-conf@{{.Values.cp_network_interface}}
      labels:
        name: neutron-network-agent
{{ tuple . "neutron" "agent" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
    spec:
      nodeSelector:
        multus: bond1
      containers:
        - name: neutron-dhcp-agent
          image: {{ default "hub.global.cloud.sap" .Values.global.imageRegistry }}/monsoon/loci-neutron:{{.Values.imageVersionNetworkAgentDHCP | default .Values.imageVersionNetworkAgent | default .Values.imageVersion | required "Please set neutron.imageVersionNetworkAgentDHCP or similar"}}
          imagePullPolicy: IfNotPresent
          command: ["dumb-init", "neutron-dhcp-agent", "--config-file", "/etc/neutron/neutron.conf", "--config-file", "/etc/neutron/dhcp-agent.ini", "--config-file", "/etc/neutron/linux-bridge.ini"]
          env:
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: neutron.DSN.python
            - name: DEBUG_CONTAINER
              value: "false"
          readinessProbe:
            exec:
              command: ["openstack-agent-liveness", "--component", "neutron", "--config-file", "/etc/neutron/neutron.conf", "--dhcp_ready"]
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 10
          livenessProbe:
            exec:
              command: ["openstack-agent-liveness", "--component", "neutron", "--config-file", "/etc/neutron/neutron.conf", "--binary", "neutron-dhcp-agent"]
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /var/run
              name: run
            - mountPath: /lib/modules
              name: modules
              readOnly: true
            - name: neutron-etc
              mountPath: /etc/neutron/neutron.conf
              subPath: neutron.conf
              readOnly: true
            - name: neutron-etc
              mountPath: /etc/neutron/dhcp-agent.ini
              subPath: dhcp-agent.ini
              readOnly: true
            - name: neutron-etc
              mountPath: /etc/neutron/linux-bridge.ini
              subPath: linux-bridge.ini
              readOnly: true
            - name: neutron-etc
              mountPath: /etc/neutron/dnsmasq.conf
              subPath: dnsmasq.conf
              readOnly: true
            - name: neutron-etc
              mountPath: /etc/neutron/logging.conf
              subPath: logging.conf
              readOnly: true
            - name: neutron-etc
              mountPath: /etc/neutron/rootwrap.conf
              subPath: rootwrap.conf
              readOnly: true
            - name: neutron-etc
              mountPath: /etc/neutron/rootwrap.d/dhcp.filters
              subPath: dhcp.filters
              readOnly: true
            - name: neutron-etc
              mountPath: /etc/sudoers
              subPath: sudoers
              defaultMode: 0440
              readOnly: true
            - mountPath: /run/netns
              name: host-run-netns
              mountPropagation: Bidirectional
        - name: neutron-metadata-agent
          image: {{ default "hub.global.cloud.sap" .Values.global.imageRegistry }}/monsoon/loci-neutron:{{.Values.imageVersionNetworkAgentMetadata | default .Values.imageVersionNetworkAgent | default .Values.imageVersion | required "Please set neutron.imageVersionNetworkAgentMetadata or similar"}}
          imagePullPolicy: IfNotPresent
          command: ["dumb-init", "neutron-metadata-agent", "--config-file", "/etc/neutron/neutron.conf", "--config-file", "/etc/neutron/metadata-agent.ini"]
          env:
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: neutron.DSN.python
            - name: DEBUG_CONTAINER
              value: "false"
          livenessProbe:
            exec:
              command: ["openstack-agent-liveness", "--component", "neutron", "--config-file", "/etc/neutron/neutron.conf", "--binary", "neutron-metadata-agent"]
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /var/run
              name: run
            - name: neutron-etc
              mountPath: /etc/neutron/neutron.conf
              subPath: neutron.conf
              readOnly: true
            - name: neutron-etc
              mountPath: /etc/neutron/metadata-agent.ini
              subPath: metadata-agent.ini
              readOnly: true
            - name: neutron-etc
              mountPath: /etc/neutron/logging.conf
              subPath: logging.conf
              readOnly: true
        - name: neutron-l3-agent
          image: {{ default "hub.global.cloud.sap" .Values.global.imageRegistry }}/monsoon/loci-neutron:{{.Values.imageVersionNetworkAgentL3 | default .Values.imageVersionNetworkAgent | default .Values.imageVersion | required "Please set neutron.imageVersionNetworkAgentL3 or similar"}}
          imagePullPolicy: IfNotPresent
          command: ["dumb-init", "neutron-l3-agent", "--config-file", "/etc/neutron/neutron.conf", "--config-file", "/etc/neutron/l3-agent.ini", "--config-file", "/etc/neutron/plugins/ml2/ml2-conf.ini", "--config-file", "/etc/neutron/linux-bridge.ini"]
          env:
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: neutron.DSN.python
            - name: DEBUG_CONTAINER
              value: "false"
          livenessProbe:
            exec:
              command: ["openstack-agent-liveness", "--component", "neutron", "--config-file", "/etc/neutron/neutron.conf", "--binary", "neutron-l3-agent"]
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
          volumeMounts:
            - mountPath: /var/run
              name: run
            - mountPath: /lib/modules
              name: modules
              readOnly: true
            - name: neutron-etc
              mountPath: /etc/neutron/neutron.conf
              subPath: neutron.conf
              readOnly: true
            - name: neutron-etc
              mountPath: /etc/neutron/l3-agent.ini
              subPath: l3-agent.ini
              readOnly: true
            - name: neutron-etc
              mountPath: /etc/neutron/plugins/ml2/ml2-conf.ini
              subPath: ml2-conf.ini
              readOnly: true
            - name: neutron-etc
              mountPath: /etc/neutron/linux-bridge.ini
              subPath: linux-bridge.ini
              readOnly: true
            - name: neutron-etc
              mountPath: /etc/neutron/logging.conf
              subPath: logging.conf
              readOnly: true
            - name: neutron-etc
              mountPath: /etc/neutron/rootwrap.conf
              subPath: rootwrap.conf
              readOnly: true
            - name: neutron-etc
              mountPath: /etc/neutron/rootwrap.d/l3.filters
              subPath: l3.filters
              readOnly: true
            - name: neutron-etc
              mountPath: /etc/sudoers
              subPath: sudoers
              defaultMode: 0440
              readOnly: true
        - name: neutron-linuxbridge-agent
          image: {{ default "hub.global.cloud.sap" .Values.global.imageRegistry }}/monsoon/loci-neutron:{{.Values.imageVersionNetworkAgentLinuxBridge | default .Values.imageVersionNetworkAgent | default .Values.imageVersion | required "Please set neutron.imageVersionNetworkAgentLinuxBridge or similar"}}
          imagePullPolicy: IfNotPresent
          command: ["dumb-init", "neutron-linuxbridge-agent", "--config-file", "/etc/neutron/neutron.conf", "--config-file", "/etc/neutron/plugins/ml2/ml2_conf.ini", "--config-file", "/etc/neutron/linux-bridge.ini"]
          env:
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: neutron.DSN.python
            - name: DEBUG_CONTAINER
              value: "false"
          livenessProbe:
            exec:
              command: ["openstack-agent-liveness", "--component", "neutron", "--config-file", "/etc/neutron/neutron.conf", "--binary", "neutron-linuxbridge-agent"]
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /var/run
              name: run
            - mountPath: /lib/modules
              name: modules
              readOnly: true
            - name: neutron-etc
              mountPath: /etc/neutron/neutron.conf
              subPath: neutron.conf
              readOnly: true
            - name: neutron-etc
              mountPath: /etc/neutron/plugins/ml2/ml2_conf.ini
              subPath: ml2-conf.ini
              readOnly: true
            - name: neutron-etc
              mountPath: /etc/neutron/linux-bridge.ini
              subPath: linux-bridge.ini
              readOnly: true
            - name: neutron-etc
              mountPath: /etc/neutron/logging.conf
              subPath: logging.conf
              readOnly: true
            - name: neutron-etc
              mountPath: /etc/neutron/rootwrap.conf
              subPath: rootwrap.conf
              readOnly: true
            - name: neutron-etc
              mountPath: /etc/sudoers
              subPath: sudoers
              defaultMode: 0440
              readOnly: true
      volumes:
        - name : run
          emptyDir:
            medium: Memory
        - name : modules
          hostPath:
            path: /lib/modules
        - name: neutron-etc
          configMap:
            name: neutron-etc
        - name: host-run-netns
          hostPath:
            path: /run/netns
{{- end }}