castellum:
  image: sapcc/castellum
  image_tag: latest
  image_pull_policy: Always

  service_user:
    password: DEFINED_IN_VALUES_FILE

  # # Whether to apply resource requests/limits to containers.
  # resources:
  #   enabled: false

# Deploy Castellum Prometheus alerts.
alerts:
  enabled: true
  # Name of the Prometheus to which the alerts should be assigned to.
  prometheus: openstack

pgmetrics:
  db_name: castellum

  customMetrics:
    # When adding new asset managers, add the corresponding to the WITH subquery as follows:
    #   SELECT 'nfs-shares' UNION SELECT 'other-thing' UNION ...
    # TODO: have Castellum generate this asset_types table
    castellum_asset_count:
      query: >
        WITH asset_types(type) AS (SELECT 'nfs-shares')
        SELECT t.type AS asset, COUNT(a.id) AS gauge
          FROM asset_types t
          LEFT OUTER JOIN resources r ON r.asset_type = t.type
          LEFT OUTER JOIN assets a ON a.resource_id = r.id
         GROUP BY t.type
      metrics:
        - asset:
            usage: "LABEL"
            description: "Asset type"
        - gauge:
            usage: "GAUGE"
            description: "Total number of assets that are managed by Castellum"
    castellum_resource_count:
      query: >
        WITH asset_types(type) AS (SELECT 'nfs-shares')
        SELECT t.type AS asset, COUNT(r.id) AS gauge
          FROM asset_types t
          LEFT OUTER JOIN resources r ON r.asset_type = t.type
         GROUP BY t.type
      metrics:
        - asset:
            usage: "LABEL"
            description: "Asset type"
        - gauge:
            usage: "GAUGE"
            description: "Total number of resources where autoscaling is enabled"
    castellum_min_greenlit_at:
      query: >
        SELECT r.scope_uuid AS project_id, r.asset_type AS asset, EXTRACT(epoch FROM MIN(o.greenlit_at)) AS gauge
          FROM resources r
          JOIN assets a ON a.resource_id = r.id
          JOIN pending_operations o ON o.asset_id = a.id
         WHERE o.greenlit_at IS NOT NULL
         GROUP BY r.scope_uuid, r.asset_type
      metrics:
        - project_id:
            usage: "LABEL"
            description: "UUID of project"
        - asset:
            usage: "LABEL"
            description: "Asset type"
        - gauge:
            usage: "GAUGE"
            description: "Lowest greenlit_at timestamp of any pending operation in this project resource"
