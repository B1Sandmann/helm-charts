kind: Deployment
apiVersion: extensions/v1beta1

metadata:
  name: keppel-api

spec:
  revisionHistoryLimit: 5
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 2
  selector:
    matchLabels:
      app: keppel-api
  template:
    metadata:
      labels:
        app: keppel-api
      annotations:
        checksum: {{ include "keppel/templates/configmap.yaml" . | sha256sum }}
    spec:
      volumes:
        - name: config
          configMap:
            name: keppel
      containers:
        - name: api
          image: {{include "keppel_image" .}}
          imagePullPolicy: {{.Values.keppel.image_pull_policy}}
          command: [ /usr/bin/keppel-api ]
          args: []
          env:
            - name: KEPPEL_DEBUG
              value: 'false'
            - name:  KEPPEL_API_LISTEN_ADDRESS
              value: ':80'
            - name:  KEPPEL_API_PUBLIC_URL
              value: 'https://keppel.{{.Values.global.region}}.{{.Values.global.tld}}'
            - name:  KEPPEL_AUTH_LOCAL_ROLE
              value: 'swiftoperator'
            - name:  KEPPEL_DB_URI
              value: 'postgres://postgres:{{.Values.postgresql.postgresPassword}}@keppel-postgresql/keppel?sslmode=disable'
            - name:  KEPPEL_DRIVER_AUTH
              value: 'keystone'
            - name:  KEPPEL_DRIVER_ORCHESTRATION
              value: 'local-processes'
            - name:  KEPPEL_DRIVER_STORAGE
              value: 'swift'
            - name:  KEPPEL_ISSUER_CERT
              value: '/etc/keppel/issuer-cert.pem'
            - name:  KEPPEL_ISSUER_KEY
              value: '/etc/keppel/issuer-key.pem'
            - name:  KEPPEL_OSLO_POLICY_PATH
              value: '/etc/keppel/policy.json'
            - name: OS_AUTH_URL
              value: "http://keystone.{{ .Values.global.keystoneNamespace }}.svc.kubernetes.{{ .Values.global.region }}.{{ .Values.global.tld }}:5000/v3"
            - name: OS_AUTH_VERSION
              value: '3'
            - name: OS_IDENTITY_API_VERSION
              value: '3'
            - name: OS_INTERFACE
              value: 'internal'
            - name: OS_PASSWORD
              value: {{ quote .Values.keppel.service_password }}
            - name: OS_PROJECT_DOMAIN_NAME
              value: 'Default'
            - name: OS_PROJECT_NAME
              value: 'service'
            - name: OS_REGION_NAME
              value: {{ quote .Values.global.region }}
            - name: OS_USER_DOMAIN_NAME
              value: 'Default'
            - name: OS_USERNAME
              value: 'keppel'
          {{- if .Values.keppel.with_dev_toolbox }}
            # remove leading underscores for both variables below to start recording requests
            # (see also templates/deployment-dev-toolbox.yaml)
            - name: _KEPPEL_INSECURE
              value: 'true'
            - name: _HTTP_PROXY
              value: 'http://dev-toolbox:8080'
          {{- end }}
          volumeMounts:
            - mountPath: /etc/keppel
              name: config
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 80
            timeoutSeconds: 10
            periodSeconds: 60
            initialDelaySeconds: 60
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: 80
            timeoutSeconds: 5
            periodSeconds: 5
